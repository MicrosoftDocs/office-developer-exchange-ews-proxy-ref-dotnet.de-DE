<Type Name="FindFolderType" FullName="ExchangeWebServices.FindFolderType">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e997bd1fb1374ad0c54e2309daa7c7c1fc4aeebe" />
    <Meta Name="ms.sourcegitcommit" Value="09f9993d313d1e3ec77e21f70573b3fced6eea2e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20606707" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FindFolderType : ExchangeWebServices.BaseRequestType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit FindFolderType extends ExchangeWebServices.BaseRequestType" />
  <TypeSignature Language="DocId" Value="T:ExchangeWebServices.FindFolderType" />
  <TypeSignature Language="VB.NET" Value="Public Class FindFolderType&#xA;Inherits BaseRequestType" />
  <TypeSignature Language="C++ CLI" Value="public ref class FindFolderType : ExchangeWebServices::BaseRequestType" />
  <AssemblyInfo>
    <AssemblyName>EWS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>ExchangeWebServices.BaseRequestType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignerCategory("code")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Xml.Serialization.XmlType(Namespace="http://schemas.microsoft.com/exchange/services/2006/messages")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Die <see cref="T:ExchangeWebServices.FindFolderType" /> -Klasse repräsentiert eine Anforderung zum Suchen von Ordnern in einem Postfach.</summary>
    <remarks>
      <para>Der FindFolder Vorgang sucht nach Unterordnern eines angegebenen Ordners. Der Vorgang FindFolder gibt nur die ersten 512 Byte einer beliebigen streamfähiges Eigenschaft zurück. Für Unicode gibt der Vorgang FindFolder die ersten 255 Zeichen eine mit Null terminierte Unicode-Zeichenfolge. Verwenden Sie die GetFolder-Operation abzurufenden zusätzliche Ordnereigenschaften.</para>
      <para>Einschränkungen auf Ordnereigenschaften, aber nicht Elementeigenschaften sind zulässig. Sortierungsfunktionen ist nicht verfügbar für FindFolder Antworten. Gruppierte Abfragen sind nicht verfügbar für FindFolder Abfragen. </para>
      <para />
    </remarks>
    <example>
      <para>Das folgende Beispiel zeigt eine FindFolder-Abfrage, die die folgenden Ergebnisse zurückgegeben:</para>
      <list type="number">
        <item>
          <description>Hierarchien Durchsuchen des Posteingangs.</description>
        </item>
        <item>
          <description>Alle Eigenschaften, die für die Standard-FolderShape in einem Vorgang FindFolder definiert sind.</description>
        </item>
        <item>
          <description>Alle Ordner, die einen Anzeigenamen des SentOnlyToMe aufweisen. Die Groß-/Kleinschreibung muss nicht übereinstimmen.</description>
        </item>
        <item>
          <description>Ein Bruch Paging-Schema, der höchstens einem gemeinsamen Ordner zurückgibt, beginnt nach den ersten Ordner.</description>
        </item>
      </list>
      <code>static void FindFolder(ExchangeServiceBinding esb)
{
    // Create the request and specify the traversal type.
    FindFolderType &lt;span class="label"&gt;findFolderRequest&lt;/span&gt; = new FindFolderType();
    &lt;span class="label"&gt;findFolderRequest&lt;/span&gt;.Traversal = FolderQueryTraversalType.Deep;

    // Define the properties to be returned in the response.
    FolderResponseShapeType responseShape = new FolderResponseShapeType();
    responseShape.BaseShape = DefaultShapeNamesType.Default;
    &lt;span class="label"&gt;findFolderRequest&lt;/span&gt;.FolderShape = responseShape;

    // Identify which folders to search.
    DistinguishedFolderIdType[] folderIDArray = new DistinguishedFolderIdType[1];
    folderIDArray[0] = new DistinguishedFolderIdType();
    folderIDArray[0].Id = DistinguishedFolderIdNameType.inbox;

    // Add the folders to search to the request.
    &lt;span class="label"&gt;findFolderRequest&lt;/span&gt;.ParentFolderIds = folderIDArray;

    // Restriction based on the folder display name.
    RestrictionType restriction = new RestrictionType();
    PathToUnindexedFieldType fldrRestriction = new PathToUnindexedFieldType();
    fldrRestriction.FieldURI = UnindexedFieldURIType.folderDisplayName;
    // Identify the folder name to restrict on.
    ContainsExpressionType contains = new ContainsExpressionType();
    contains.ContainmentMode = ContainmentModeType.Substring;
    contains.ContainmentModeSpecified = true;
    contains.ContainmentComparison = ContainmentComparisonType.IgnoreCase;
    contains.ContainmentComparisonSpecified = true;
    contains.Item = fldrRestriction;
    contains.Constant = new ConstantValueType();
    contains.Constant.Value = "SentOnlyToMe";
    restriction.Item = contains;
    &lt;span class="label"&gt;findFolderRequest&lt;/span&gt;.Restriction = restriction;

    // Define the paging scheme for the result set.
    FractionalPageViewType fpvt = new FractionalPageViewType();
    fpvt.MaxEntriesReturned = 1;
    fpvt.MaxEntriesReturnedSpecified = true;
    fpvt.Numerator = 1;
    fpvt.Denominator = 4;
    &lt;span class="label"&gt;findFolderRequest&lt;/span&gt;.Item = fpvt;

    try
    {
        // Send the request and get the response.
        FindFolderResponseType findFolderResponse = esb.FindFolder(&lt;span class="label"&gt;findFolderRequest&lt;/span&gt;);

        // Get the response messages.
        ResponseMessageType[] rmta = findFolderResponse.ResponseMessages.Items;

        foreach (ResponseMessageType rmt in rmta)
        {
            FindFolderResponseMessageType ffrmt = (rmt as FindFolderResponseMessageType);

            FindFolderParentType ffpt = ffrmt.RootFolder;
            BaseFolderType[] folders = ffpt.Folders;
            
            foreach (BaseFolderType folder in folders)
            {
                // Check folder type
                if (folder is CalendarFolderType)
                {
                    CalendarFolderType fldr = (folder as CalendarFolderType);
                    // TODO: Handle calendar folder
                }
                else 
                { 
                    // TODO: Handle folders, search folders, tasks folders,
                    // and contacts folder
                }
            }
        }
    }
    catch (Exception e)
    {
        Console.WriteLine(e.Message);
    }
}</code>
    </example>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FindFolderType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:ExchangeWebServices.FindFolderType.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FindFolderType();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EWS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Die <see cref="T:ExchangeWebServices.FindFolderType" /> Konstruktor initialisiert eine neue Instanz des der <see cref="T:ExchangeWebServices.FindFolderType" /> Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FolderShape">
      <MemberSignature Language="C#" Value="public ExchangeWebServices.FolderResponseShapeType FolderShape { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class ExchangeWebServices.FolderResponseShapeType FolderShape" />
      <MemberSignature Language="DocId" Value="P:ExchangeWebServices.FindFolderType.FolderShape" />
      <MemberSignature Language="VB.NET" Value="Public Property FolderShape As FolderResponseShapeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ExchangeWebServices::FolderResponseShapeType ^ FolderShape { ExchangeWebServices::FolderResponseShapeType ^ get(); void set(ExchangeWebServices::FolderResponseShapeType ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EWS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>ExchangeWebServices.FolderResponseShapeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die <see cref="P:ExchangeWebServices.FindFolderType.FolderShape" /> -Eigenschaft dient zum Abrufen oder die Form festgelegt, der die Anzahl von Abfragen. Diese Eigenschaft ist erforderlich. Dies ist eine Lese-Schreib-Eigenschaft.</summary>
        <value>Die <see cref="P:ExchangeWebServices.FindFolderType.FolderShape" /> -Eigenschaft gibt eine <see cref="T:ExchangeWebServices.FolderResponseShapeType" /> -Objekt, das die Beschreibung der Eigenschaften enthält, die aufgefordert, die im Resultset zurückgegeben werden soll.</value>
        <remarks>
          <para>Die <see cref="P:ExchangeWebServices.FindFolderType.FolderShape" /> -Eigenschaft beschreibt, welche Eigenschaften von der Antwort FindFolder zurückgegeben werden.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public ExchangeWebServices.BasePagingType Item { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class ExchangeWebServices.BasePagingType Item" />
      <MemberSignature Language="DocId" Value="P:ExchangeWebServices.FindFolderType.Item" />
      <MemberSignature Language="VB.NET" Value="Public Property Item As BasePagingType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ExchangeWebServices::BasePagingType ^ Item { ExchangeWebServices::BasePagingType ^ get(); void set(ExchangeWebServices::BasePagingType ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EWS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlElement("FractionalPageFolderView", typeof(ExchangeWebServices.FractionalPageViewType))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlElement("IndexedPageFolderView", typeof(ExchangeWebServices.IndexedPageViewType))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>ExchangeWebServices.BasePagingType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die <see cref="P:ExchangeWebServices.FindFolderType.Item" /> -Eigenschaft ruft ab oder legt den paging-Typ, der beschreibt, wie in der Antwort der Abfrageresultset ausgelagert wird. Diese Eigenschaft ruft ab oder legt fest, entweder ein <see cref="T:ExchangeWebServices.IndexedPageViewType" /> oder <see cref="T:ExchangeWebServices.FractionalPageViewType" /> Objekt. Diese Eigenschaft ist optional. Dies ist eine Lese-Schreib-Eigenschaft.</summary>
        <value>Die <see cref="P:ExchangeWebServices.FindFolderType.Item" /> -Eigenschaft gibt eine <see cref="T:ExchangeWebServices.BasePagingType" /> -Objekt, das den Typ des Paging für die Anzahl von Abfragen ausgeführt werden darstellt.</value>
        <remarks>
          <para>Die <see cref="P:ExchangeWebServices.FindFolderType.Item" /> -Eigenschaft kann festgelegt werden, entweder mit der <see cref="T:ExchangeWebServices.IndexedPageViewType" /> oder <see cref="T:ExchangeWebServices.FractionalPageViewType" /> Objekte. Alle diese Typen erweitert <see cref="T:ExchangeWebServices.BasePagingType" />, die eine abstrakte Klasse ist. Diese Eigenschaft ist optional. Wenn diese Eigenschaft nicht festgelegt ist, ist das Standardverhalten eine Ansicht zurück, die alle Ordner im Resultset enthält.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentFolderIds">
      <MemberSignature Language="C#" Value="public ExchangeWebServices.BaseFolderIdType[] ParentFolderIds { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class ExchangeWebServices.BaseFolderIdType[] ParentFolderIds" />
      <MemberSignature Language="DocId" Value="P:ExchangeWebServices.FindFolderType.ParentFolderIds" />
      <MemberSignature Language="VB.NET" Value="Public Property ParentFolderIds As BaseFolderIdType()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;ExchangeWebServices::BaseFolderIdType ^&gt; ^ ParentFolderIds { cli::array &lt;ExchangeWebServices::BaseFolderIdType ^&gt; ^ get(); void set(cli::array &lt;ExchangeWebServices::BaseFolderIdType ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EWS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlArrayItem("FolderId", typeof(ExchangeWebServices.FolderIdType), IsNullable=false, Namespace="http://schemas.microsoft.com/exchange/services/2006/types")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlArrayItem("DistinguishedFolderId", typeof(ExchangeWebServices.DistinguishedFolderIdType), IsNullable=false, Namespace="http://schemas.microsoft.com/exchange/services/2006/types")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>ExchangeWebServices.BaseFolderIdType[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die <see cref="P:ExchangeWebServices.FindFolderType.ParentFolderIds" /> -Eigenschaft ruft ab oder legt die Ordnern, die der Vorgang FindFolder durchsucht. Diese Eigenschaft ist erforderlich. Dies ist eine Lese-Schreib-Eigenschaft.</summary>
        <value>Die <see cref="P:ExchangeWebServices.FindFolderType.ParentFolderIds" /> -Eigenschaft gibt ein Array von <see cref="T:ExchangeWebServices.BaseFolderIdType" /> -Objekten, die die Bezeichner für den Vorgang FindFolder zum Durchsuchen aller Ordner enthält.</value>
        <remarks>
          <para>Die <see cref="P:ExchangeWebServices.FindItemType.ParentFolderIds" /> -Eigenschaft kann festgelegt werden, mit Arrays von entweder <see cref="T:ExchangeWebServices.FolderIdType" /> oder <see cref="T:ExchangeWebServices.DistinguishedFolderIdType" /> Objekte. Erweitern Sie beide Typen <see cref="T:ExchangeWebServices.BaseFolderIdType" />, die eine abstrakte Klasse ist.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Restriction">
      <MemberSignature Language="C#" Value="public ExchangeWebServices.RestrictionType Restriction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class ExchangeWebServices.RestrictionType Restriction" />
      <MemberSignature Language="DocId" Value="P:ExchangeWebServices.FindFolderType.Restriction" />
      <MemberSignature Language="VB.NET" Value="Public Property Restriction As RestrictionType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ExchangeWebServices::RestrictionType ^ Restriction { ExchangeWebServices::RestrictionType ^ get(); void set(ExchangeWebServices::RestrictionType ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EWS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>ExchangeWebServices.RestrictionType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die <see cref="P:ExchangeWebServices.FindFolderType.Restriction" /> -Eigenschaft abgerufen oder festgelegt, die eine Abfrage Ordner definieren Parameter für die Suche. Diese Eigenschaft ist optional. Dies ist eine Lese-Schreib-Eigenschaft.</summary>
        <value>Die <see cref="P:ExchangeWebServices.FindFolderType.Restriction" /> -Eigenschaft gibt eine <see cref="T:ExchangeWebServices.RestrictionType" /> -Objekt, das Parameter für die Suche enthält, mit denen die Abfrage definiert.</value>
        <remarks>
          <para>Die <see cref="P:ExchangeWebServices.FindFolderType.Restriction" /> -Eigenschaft, wenn sie verwendet wird, sollten nur verwenden, die Eigenschaften des Ordners. Die <see cref="P:ExchangeWebServices.FindFolderType.Restriction" /> -Eigenschaft kann die folgenden Suchausdrücke enthalten:</para>
          <list type="bullet">
            <item>
              <description>und</description>
            </item>
            <item>
              <description>enthält</description>
            </item>
            <item>
              <description>ausgeschlossen</description>
            </item>
            <item>
              <description>Exists</description>
            </item>
            <item>
              <description>"IsEqualTo"</description>
            </item>
            <item>
              <description>IsGreaterThan</description>
            </item>
            <item>
              <description>IsGreaterThanOrEqualTo</description>
            </item>
            <item>
              <description>IsLessThan </description>
            </item>
            <item>
              <description>IsLessThanOrEqualTo</description>
            </item>
            <item>
              <description>IsNotEqualTo</description>
            </item>
            <item>
              <description>nicht</description>
            </item>
            <item>
              <description>oder</description>
            </item>
          </list>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Traversal">
      <MemberSignature Language="C#" Value="public ExchangeWebServices.FolderQueryTraversalType Traversal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype ExchangeWebServices.FolderQueryTraversalType Traversal" />
      <MemberSignature Language="DocId" Value="P:ExchangeWebServices.FindFolderType.Traversal" />
      <MemberSignature Language="VB.NET" Value="Public Property Traversal As FolderQueryTraversalType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ExchangeWebServices::FolderQueryTraversalType Traversal { ExchangeWebServices::FolderQueryTraversalType get(); void set(ExchangeWebServices::FolderQueryTraversalType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EWS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlAttribute</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>ExchangeWebServices.FolderQueryTraversalType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die <see cref="P:ExchangeWebServices.FindFolderType.Traversal" /> -Eigenschaft dient zum Abrufen oder das Traversal-Schema, das für den Ordner für die Suche verwendet wird. Diese Eigenschaft ist erforderlich. Dies ist eine Lese-Schreib-Eigenschaft.</summary>
        <value>Die <see cref="P:ExchangeWebServices.FindFolderType.Traversal" /> -Eigenschaft gibt eine <see cref="T:ExchangeWebServices.FolderQueryTraversalType" /> -Enumeration, die den Typ des durchqueren definiert, die für die Suche ausgeführt wird.</value>
        <remarks>
          <para>Der Vorgang FindFolder unterstützt flach und tief durchqueren Ordner suchen.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>