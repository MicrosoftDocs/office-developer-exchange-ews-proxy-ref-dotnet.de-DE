<Type Name="AddDelegateType" FullName="ExchangeWebServices.AddDelegateType">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d6275087477ccf777eb3ad317db7bae84cfe0af0" />
    <Meta Name="ms.sourcegitcommit" Value="09f9993d313d1e3ec77e21f70573b3fced6eea2e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20606593" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AddDelegateType : ExchangeWebServices.BaseDelegateType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit AddDelegateType extends ExchangeWebServices.BaseDelegateType" />
  <TypeSignature Language="DocId" Value="T:ExchangeWebServices.AddDelegateType" />
  <TypeSignature Language="VB.NET" Value="Public Class AddDelegateType&#xA;Inherits BaseDelegateType" />
  <TypeSignature Language="C++ CLI" Value="public ref class AddDelegateType : ExchangeWebServices::BaseDelegateType" />
  <AssemblyInfo>
    <AssemblyName>EWS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>ExchangeWebServices.BaseDelegateType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignerCategory("code")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Xml.Serialization.XmlType(Namespace="http://schemas.microsoft.com/exchange/services/2006/messages")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="d1e93-101">Die <see cref="T:ExchangeWebServices.AddDelegateType" /> -Klasse repräsentiert eine Anforderung an ein Postfach Stellvertretungen hinzugefügt.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d1e93-101">The <see cref="T:ExchangeWebServices.AddDelegateType" /> class represents a request to add delegates to a mailbox.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
    <example>
      <span data-ttu-id="d1e93-102">
        <para>Das folgende Beispiel veranschaulicht die Benutzer2 Stellvertretungsberechtigungen für Ordner erteilen, der von Benutzer1 gehören. Benutzer2 erhält die Berechtigungsstufe Berechtigungen von Benutzer1 Kalenderordner und Berechtigungen von Benutzer1 Kontakteordner Reviewer-Ebene. Benutzer2 erhält Kopien der Nachrichten meeting und private Elemente im Postfach von Benutzer1 anzeigen kann. Besprechungsanfragen werden user1 und user2 versendet.</para>
        <code>static void AddDelegate()
{
    // Set the version, credentials, and the Client Access server on ExchangeServiceBinding.
    ExchangeServiceBinding esb = new ExchangeServiceBinding();
    esb.RequestServerVersionValue = new RequestServerVersion();
    esb.RequestServerVersionValue.Version = ExchangeVersionType.Exchange2007_SP1;
    esb.Credentials = new NetworkCredential("username", "password", "domain");
    esb.Url = "https://FQDN/ews/exchange.asmx";

    // Create the request.
    AddDelegateType request = new AddDelegateType();
    
    // Identify the mailbox to which a delegate user will be added.
    request.Mailbox = new EmailAddressType();
    request.Mailbox.EmailAddress = "user1@example.com";

    // Identify the delegate user and set delegate permissions.
    request.DelegateUsers = new DelegateUserType[] { new DelegateUserType() };
    request.DelegateUsers[0].UserId = new UserIdType();
    request.DelegateUsers[0].UserId.PrimarySmtpAddress = "user2@example.com";
    request.DelegateUsers[0].DelegatePermissions = new DelegatePermissionsType();
    request.DelegateUsers[0].DelegatePermissions.CalendarFolderPermissionLevel = DelegateFolderPermissionLevelType.Author;
    request.DelegateUsers[0].DelegatePermissions.CalendarFolderPermissionLevelSpecified = true;
    request.DelegateUsers[0].DelegatePermissions.ContactsFolderPermissionLevel = DelegateFolderPermissionLevelType.Reviewer;
    request.DelegateUsers[0].DelegatePermissions.ContactsFolderPermissionLevelSpecified = true;
    request.DelegateUsers[0].ReceiveCopiesOfMeetingMessages = true;
    request.DelegateUsers[0].ReceiveCopiesOfMeetingMessagesSpecified = true;
    request.DelegateUsers[0].ViewPrivateItems = true;
    request.DelegateUsers[0].ViewPrivateItemsSpecified = true;
    
    // Identify how meeting requests are handled.
    request.DeliverMeetingRequests = new DeliverMeetingRequestsType();
    request.DeliverMeetingRequests = DeliverMeetingRequestsType.DelegatesAndMe;
    request.DeliverMeetingRequestsSpecified = true;

    try
    {
        // Send the AddDelegate request and get the response.
        AddDelegateResponseMessageType response = esb.AddDelegate(request);
        DelegateUserResponseMessageType[] durmt = new DelegateUserResponseMessageType[] { };
        durmt = response.ResponseMessages;

        // Check each response message.
        foreach (DelegateUserResponseMessageType resp in durmt)
        {
            if (resp.ResponseClass == ResponseClassType.Success)
            {
                Console.WriteLine("Delegate user added: " + resp.DelegateUser.UserId.DisplayName);
            }
            else if (resp.ResponseClass == ResponseClassType.Error)
            {
                Console.WriteLine("Error: " + resp.MessageText);
            }
            else
                Console.WriteLine("Warning: " + resp.MessageText);
        }
        Console.ReadLine();
    }
    catch (Exception e)
    {
        Console.WriteLine(e.Message);
        Console.ReadLine();
    }
}</code>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="d1e93-102">
          <para>The following example shows you how to give user2 delegate permissions on folders that are owned by user1. User2 is given Author-level permissions to user1's Calendar folder and Reviewer-level permissions to user1's Contacts folder. User2 will receive copies of meeting messages and will be able to view private items in user1's mailbox. Meeting requests will be sent to both user1 and user2.</para>
          <code>static void AddDelegate()
{
    // Set the version, credentials, and the Client Access server on ExchangeServiceBinding.
    ExchangeServiceBinding esb = new ExchangeServiceBinding();
    esb.RequestServerVersionValue = new RequestServerVersion();
    esb.RequestServerVersionValue.Version = ExchangeVersionType.Exchange2007_SP1;
    esb.Credentials = new NetworkCredential("username", "password", "domain");
    esb.Url = "https://FQDN/ews/exchange.asmx";

    // Create the request.
    AddDelegateType request = new AddDelegateType();
    
    // Identify the mailbox to which a delegate user will be added.
    request.Mailbox = new EmailAddressType();
    request.Mailbox.EmailAddress = "user1@example.com";

    // Identify the delegate user and set delegate permissions.
    request.DelegateUsers = new DelegateUserType[] { new DelegateUserType() };
    request.DelegateUsers[0].UserId = new UserIdType();
    request.DelegateUsers[0].UserId.PrimarySmtpAddress = "user2@example.com";
    request.DelegateUsers[0].DelegatePermissions = new DelegatePermissionsType();
    request.DelegateUsers[0].DelegatePermissions.CalendarFolderPermissionLevel = DelegateFolderPermissionLevelType.Author;
    request.DelegateUsers[0].DelegatePermissions.CalendarFolderPermissionLevelSpecified = true;
    request.DelegateUsers[0].DelegatePermissions.ContactsFolderPermissionLevel = DelegateFolderPermissionLevelType.Reviewer;
    request.DelegateUsers[0].DelegatePermissions.ContactsFolderPermissionLevelSpecified = true;
    request.DelegateUsers[0].ReceiveCopiesOfMeetingMessages = true;
    request.DelegateUsers[0].ReceiveCopiesOfMeetingMessagesSpecified = true;
    request.DelegateUsers[0].ViewPrivateItems = true;
    request.DelegateUsers[0].ViewPrivateItemsSpecified = true;
    
    // Identify how meeting requests are handled.
    request.DeliverMeetingRequests = new DeliverMeetingRequestsType();
    request.DeliverMeetingRequests = DeliverMeetingRequestsType.DelegatesAndMe;
    request.DeliverMeetingRequestsSpecified = true;

    try
    {
        // Send the AddDelegate request and get the response.
        AddDelegateResponseMessageType response = esb.AddDelegate(request);
        DelegateUserResponseMessageType[] durmt = new DelegateUserResponseMessageType[] { };
        durmt = response.ResponseMessages;

        // Check each response message.
        foreach (DelegateUserResponseMessageType resp in durmt)
        {
            if (resp.ResponseClass == ResponseClassType.Success)
            {
                Console.WriteLine("Delegate user added: " + resp.DelegateUser.UserId.DisplayName);
            }
            else if (resp.ResponseClass == ResponseClassType.Error)
            {
                Console.WriteLine("Error: " + resp.MessageText);
            }
            else
                Console.WriteLine("Warning: " + resp.MessageText);
        }
        Console.ReadLine();
    }
    catch (Exception e)
    {
        Console.WriteLine(e.Message);
        Console.ReadLine();
    }
}</code>
        </span>
      </span>
    </example>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AddDelegateType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:ExchangeWebServices.AddDelegateType.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AddDelegateType();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EWS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d1e93-103">Die <see cref="T:ExchangeWebServices.AddDelegateType" /> Konstruktor initialisiert eine neue Instanz des der <see cref="T:ExchangeWebServices.AddDelegateType" /> Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1e93-103">The <see cref="T:ExchangeWebServices.AddDelegateType" /> constructor initializes a new instance of the <see cref="T:ExchangeWebServices.AddDelegateType" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DelegateUsers">
      <MemberSignature Language="C#" Value="public ExchangeWebServices.DelegateUserType[] DelegateUsers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class ExchangeWebServices.DelegateUserType[] DelegateUsers" />
      <MemberSignature Language="DocId" Value="P:ExchangeWebServices.AddDelegateType.DelegateUsers" />
      <MemberSignature Language="VB.NET" Value="Public Property DelegateUsers As DelegateUserType()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;ExchangeWebServices::DelegateUserType ^&gt; ^ DelegateUsers { cli::array &lt;ExchangeWebServices::DelegateUserType ^&gt; ^ get(); void set(cli::array &lt;ExchangeWebServices::DelegateUserType ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EWS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlArrayItem("DelegateUser", IsNullable=false, Namespace="http://schemas.microsoft.com/exchange/services/2006/types")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>ExchangeWebServices.DelegateUserType[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d1e93-104">Die <see cref="P:ExchangeWebServices.AddDelegateType.DelegateUsers" /> -Eigenschaft dient zum Abrufen oder Festlegen einer <see cref="T:ExchangeWebServices.DelegateUserType" /> Array, das die Identität der Stellvertretungen hinzufügen zu einem Postfach darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1e93-104">The <see cref="P:ExchangeWebServices.AddDelegateType.DelegateUsers" /> property gets or sets a <see cref="T:ExchangeWebServices.DelegateUserType" /> array that represents the identities of delegates to add to a mailbox.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d1e93-105">Die <b>DelegateUsers</b> -Eigenschaft gibt ein Array von <see cref="T:ExchangeWebServices.DelegateUserType" /> , die die Identität der Stellvertretungen hinzufügen zu einem Postfach darstellen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1e93-105">The <b>DelegateUsers</b> property returns an array of <see cref="T:ExchangeWebServices.DelegateUserType" /> that represent the identities of delegates to add to a mailbox.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeliverMeetingRequests">
      <MemberSignature Language="C#" Value="public ExchangeWebServices.DeliverMeetingRequestsType DeliverMeetingRequests { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype ExchangeWebServices.DeliverMeetingRequestsType DeliverMeetingRequests" />
      <MemberSignature Language="DocId" Value="P:ExchangeWebServices.AddDelegateType.DeliverMeetingRequests" />
      <MemberSignature Language="VB.NET" Value="Public Property DeliverMeetingRequests As DeliverMeetingRequestsType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ExchangeWebServices::DeliverMeetingRequestsType DeliverMeetingRequests { ExchangeWebServices::DeliverMeetingRequestsType get(); void set(ExchangeWebServices::DeliverMeetingRequestsType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EWS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>ExchangeWebServices.DeliverMeetingRequestsType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d1e93-106">Die <see cref="P:ExchangeWebServices.AddDelegateType.DeliverMeetingRequests" /> -Eigenschaft dient zum Abrufen oder Festlegen einer <see cref="T:ExchangeWebServices.DeliverMeetingRequestsType" /> -Objekt, das darstellt, wie Besprechungsanfragen zwischen den Delegaten und dem Prinzipalnamen behandelt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1e93-106">The <see cref="P:ExchangeWebServices.AddDelegateType.DeliverMeetingRequests" /> property gets or sets a <see cref="T:ExchangeWebServices.DeliverMeetingRequestsType" /> object that represents how meeting requests are handled between the delegate and the principal.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d1e93-107">Die <b>DeliverMeetingRequests</b> -Eigenschaft gibt eine <see cref="T:ExchangeWebServices.DeliverMeetingRequestsType" /> -Objekt, das darstellt, wie Besprechungsanfragen zwischen dem Delegaten und dem Prinzipal behandelt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1e93-107">The <b>DeliverMeetingRequests</b> property returns a <see cref="T:ExchangeWebServices.DeliverMeetingRequestsType" /> object that represents how meeting requests are handled between the delegate and principal.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="d1e93-108">
            <para>Die Einstellung <b>DeliverMeetingRequests</b> wirkt sich auf alle Delegaten im Postfach des Prinzipals.</para>
            <para>Müssen die <see cref="P:ExchangeWebServices.AddDelegateType.DeliverMeetingRequestsSpecified" /> -Eigenschaft auf <b>true fest,</b> damit diese <b>DeliverMeetingRequests</b> in der Anforderung (SOAP = Simple Object Access Protocol) serialisiert wird.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="d1e93-108">
              <para>The <b>DeliverMeetingRequests</b> setting affects all delegates in a principal's mailbox.</para>
              <para>You must set the <see cref="P:ExchangeWebServices.AddDelegateType.DeliverMeetingRequestsSpecified" /> property to <b>true</b> so that <b>DeliverMeetingRequests</b> is serialized into the Simple Object Access Protocol (SOAP) request.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeliverMeetingRequestsSpecified">
      <MemberSignature Language="C#" Value="public bool DeliverMeetingRequestsSpecified { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DeliverMeetingRequestsSpecified" />
      <MemberSignature Language="DocId" Value="P:ExchangeWebServices.AddDelegateType.DeliverMeetingRequestsSpecified" />
      <MemberSignature Language="VB.NET" Value="Public Property DeliverMeetingRequestsSpecified As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DeliverMeetingRequestsSpecified { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EWS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d1e93-109">Die <see cref="P:ExchangeWebServices.AddDelegateType.DeliverMeetingRequestsSpecified" /> -Eigenschaft dient zum Abrufen oder Festlegen eines booleschen Werts, der angibt, ob die <see cref="P:ExchangeWebServices.AddDelegateType.DeliverMeetingRequests" /> Eigenschaft ist in der Anforderung (SOAP = Simple Object Access Protocol) serialisiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1e93-109">The <see cref="P:ExchangeWebServices.AddDelegateType.DeliverMeetingRequestsSpecified" /> property gets or sets a Boolean value that specifies whether the <see cref="P:ExchangeWebServices.AddDelegateType.DeliverMeetingRequests" /> property is serialized into the Simple Object Access Protocol (SOAP) request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d1e93-110">Die <b>DeliverMeetingRequestsSpecified</b> -Eigenschaft gibt den Wert <b>true</b> zurück, wenn <see cref="P:ExchangeWebServices.AddDelegateType.DeliverMeetingRequests" /> ist in der Anforderung (SOAP = Simple Object Access Protocol); serialisiert die Eigenschaft andernfalls zurückgibt <b>"false"</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1e93-110">The <b>DeliverMeetingRequestsSpecified</b> property returns a value of <b>true</b> if <see cref="P:ExchangeWebServices.AddDelegateType.DeliverMeetingRequests" /> is serialized into the Simple Object Access Protocol (SOAP) request; otherwise, the property returns <b>false</b>.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>